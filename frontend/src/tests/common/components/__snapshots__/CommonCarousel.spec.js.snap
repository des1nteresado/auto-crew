// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommonCarousel renders CommonCarousel component correctly 1`] = `
<WithStyles(CommonCarousel)
  style="style"
  title="title"
  viewAllClickHandler={[MockFunction]}
  withViewAllButton={true}
>
  <CommonCarousel
    classes={
      Object {
        "carousel": "CommonCarousel-carousel-3",
        "carouselContainer": "CommonCarousel-carouselContainer-1",
        "carouselHeader": "CommonCarousel-carouselHeader-2",
        "item": "CommonCarousel-item-4",
        "title": "CommonCarousel-title-5",
        "viewAll": "CommonCarousel-viewAll-6",
      }
    }
    style="style"
    title="title"
    viewAllClickHandler={[MockFunction]}
    withViewAllButton={true}
  >
    <Styled(MuiBox)
      className="CommonCarousel-carouselContainer-1 style"
    >
      <div
        className="MuiBox-root MuiBox-root-7 CommonCarousel-carouselContainer-1 style"
      >
        <Styled(MuiBox)
          className="CommonCarousel-carouselHeader-2"
        >
          <div
            className="MuiBox-root MuiBox-root-8 CommonCarousel-carouselHeader-2"
          >
            <WithStyles(ForwardRef(Typography))
              className="CommonCarousel-title-5"
              variant="h3"
            >
              <ForwardRef(Typography)
                className="CommonCarousel-title-5"
                classes={
                  Object {
                    "alignCenter": "MuiTypography-alignCenter",
                    "alignJustify": "MuiTypography-alignJustify",
                    "alignLeft": "MuiTypography-alignLeft",
                    "alignRight": "MuiTypography-alignRight",
                    "body1": "MuiTypography-body1",
                    "body2": "MuiTypography-body2",
                    "button": "MuiTypography-button",
                    "caption": "MuiTypography-caption",
                    "colorError": "MuiTypography-colorError",
                    "colorInherit": "MuiTypography-colorInherit",
                    "colorPrimary": "MuiTypography-colorPrimary",
                    "colorSecondary": "MuiTypography-colorSecondary",
                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                    "displayBlock": "MuiTypography-displayBlock",
                    "displayInline": "MuiTypography-displayInline",
                    "gutterBottom": "MuiTypography-gutterBottom",
                    "h1": "MuiTypography-h1",
                    "h2": "MuiTypography-h2",
                    "h3": "MuiTypography-h3",
                    "h4": "MuiTypography-h4",
                    "h5": "MuiTypography-h5",
                    "h6": "MuiTypography-h6",
                    "noWrap": "MuiTypography-noWrap",
                    "overline": "MuiTypography-overline",
                    "paragraph": "MuiTypography-paragraph",
                    "root": "MuiTypography-root",
                    "srOnly": "MuiTypography-srOnly",
                    "subtitle1": "MuiTypography-subtitle1",
                    "subtitle2": "MuiTypography-subtitle2",
                  }
                }
                variant="h3"
              >
                <h3
                  className="MuiTypography-root CommonCarousel-title-5 MuiTypography-h3"
                >
                  title
                </h3>
              </ForwardRef(Typography)>
            </WithStyles(ForwardRef(Typography))>
            <CommonButton
              className="CommonCarousel-viewAll-6"
              endIcon={<UNDEFINED />}
              label="View All"
              onClick={[MockFunction]}
              size="small"
              variant="text"
            >
              <WithStyles(ForwardRef(Button))
                className="CommonCarousel-viewAll-6"
                disableFocusRipple={true}
                disableRipple={true}
                disabled={false}
                endIcon={<UNDEFINED />}
                onClick={[MockFunction]}
                size="small"
                variant="text"
              >
                <ForwardRef(Button)
                  className="CommonCarousel-viewAll-6"
                  classes={
                    Object {
                      "colorInherit": "MuiButton-colorInherit",
                      "contained": "MuiButton-contained",
                      "containedPrimary": "MuiButton-containedPrimary",
                      "containedSecondary": "MuiButton-containedSecondary",
                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                      "disableElevation": "MuiButton-disableElevation",
                      "disabled": "Mui-disabled",
                      "endIcon": "MuiButton-endIcon",
                      "focusVisible": "Mui-focusVisible",
                      "fullWidth": "MuiButton-fullWidth",
                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                      "label": "MuiButton-label",
                      "outlined": "MuiButton-outlined",
                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                      "root": "MuiButton-root",
                      "sizeLarge": "MuiButton-sizeLarge",
                      "sizeSmall": "MuiButton-sizeSmall",
                      "startIcon": "MuiButton-startIcon",
                      "text": "MuiButton-text",
                      "textPrimary": "MuiButton-textPrimary",
                      "textSecondary": "MuiButton-textSecondary",
                      "textSizeLarge": "MuiButton-textSizeLarge",
                      "textSizeSmall": "MuiButton-textSizeSmall",
                    }
                  }
                  disableFocusRipple={true}
                  disableRipple={true}
                  disabled={false}
                  endIcon={<UNDEFINED />}
                  onClick={[MockFunction]}
                  size="small"
                  variant="text"
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    className="MuiButton-root MuiButton-text CommonCarousel-viewAll-6 MuiButton-textSizeSmall MuiButton-sizeSmall"
                    component="button"
                    disableRipple={true}
                    disabled={false}
                    focusRipple={false}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[MockFunction]}
                    type="button"
                  >
                    <ForwardRef(ButtonBase)
                      className="MuiButton-root MuiButton-text CommonCarousel-viewAll-6 MuiButton-textSizeSmall MuiButton-sizeSmall"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      component="button"
                      disableRipple={true}
                      disabled={false}
                      focusRipple={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[MockFunction]}
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-text CommonCarousel-viewAll-6 MuiButton-textSizeSmall MuiButton-sizeSmall"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[MockFunction]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          View All
                          <span
                            className="MuiButton-endIcon MuiButton-iconSizeSmall"
                          >
                            <ForwardRef>
                              <WithStyles(ForwardRef(SvgIcon))>
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M7.38 21.01c.49.49 1.28.49 1.77 0l8.31-8.31c.39-.39.39-1.02 0-1.41L9.15 2.98c-.49-.49-1.28-.49-1.77 0s-.49 1.28 0 1.77L14.62 12l-7.25 7.25c-.48.48-.48 1.28.01 1.76z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </span>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(Button)>
              </WithStyles(ForwardRef(Button))>
            </CommonButton>
          </div>
        </Styled(MuiBox)>
        <Styled(MuiBox)
          className="CommonCarousel-carousel-3"
        >
          <div
            className="MuiBox-root MuiBox-root-9 CommonCarousel-carousel-3"
          >
            <div>
              children
            </div>
          </div>
        </Styled(MuiBox)>
      </div>
    </Styled(MuiBox)>
  </CommonCarousel>
</WithStyles(CommonCarousel)>
`;
